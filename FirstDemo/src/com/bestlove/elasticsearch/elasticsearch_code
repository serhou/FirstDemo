
//简单搜索
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty'


//查询字符串
curl -XGET 'http://localhost:9200/megacorp/employee/_search?q=last_nameee:Simth'


//DSL语句查询（Domain Specific Language特定领域语言）
curl -XGET 'http://localhost:9200/megacorp/employee/_search' -d '
{
  "query":{
    "match":{
      "last_nameee":"Smith"
    }
  }
}'


curl -XGET 'http://localhost:9200/megacorp/employee/_search' -d '
{
  "query":{
    "match":{
      "first_name":"Jane"
    }
  }
}'

//使用过滤器的复杂查询
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty' -d '
{
	"query" : {
		"filtered" : {
			"filter" :{
				"range" : {
					"agee" : {"gt" : 30}
				}
			},
			"query" : {
				"match" : {
					"last_nameee" : "Smith"
				}
			}
		}
	}
}'

//全文搜索
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty' -d '
{
	"query" : {
		"match" : {
			"about" : "rock climbing"
		}
	}
}'


//短语搜索  查询的是一个短语，不会被分开
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty' -d '
{
	"query" : {
		"match_phrase" : {
			"about" : "rock climbing"
		}
	}
}'



//高亮搜索结果 用<em></em>来标识匹配到的单词
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty' -d '
{
	"query" : {
		"match_phrase" : {
			"about" : "rock climbing"
		}
	},
	"highlight" : {
		"fields" : {
			"about" : {}
		}
	}
}'

//分析：聚合aggregations 共同兴趣爱好
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty' -d '
{
	"aggs" : {
		"all_interests" : {
			"terms" : {"field" : "interests"}
		}
	}
}'


//加上查询条件后再分析爱好
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty' -d '
{
	"query" : {
		"match" : {
			"last_nameee" : "Smith"
		}
	},
	"aggs" : {
		"all_interests" : {
			"terms" : {"field" : "interests"}
		}
	}
}'

//聚合也允许分析汇总：统计每种兴趣下职员的平均年龄
curl -XGET 'http://localhost:9200/megacorp/employee/_search?pretty' -d '
{
	"aggs" : {
		"all_interests" : {
			"terms" : {"field" : "interests"},
			"aggs" : {
				"avg_age" : {
					"avg" : {"field" : "agee"}
				}
			}
		}
	}
}'

//一个文档不只有数据，还包含了元数据(metadata)
// 节点：_index	==>  文档存储的地方
索引(index)类似于关系型数据库里的数据库
// 节点：_type	==>  文档代表的对象的类
type表示相同的事物，类似于表
// 节点：_id 		==>  文档的唯一标识
_id与_index和_type组合时，就可以再Elasticsearch组合唯一标识一个文档。


//检索文档的一部分，获取个别字段
curl -XGET http://localhost:9200/megacorp/employee/1?_source=last_nameee,about

//仅仅只想得到_source字段而不要其他的元数据
curl -XGET http://localhost:9200/megacorp/employee/1/_source